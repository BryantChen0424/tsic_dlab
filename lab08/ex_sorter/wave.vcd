$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 4 + v0 [3:0] $end
  $var wire 4 , v1 [3:0] $end
  $var wire 4 - v2 [3:0] $end
  $var wire 4 . v3 [3:0] $end
  $var wire 4 / o0 [3:0] $end
  $var wire 4 0 o1 [3:0] $end
  $var wire 4 1 o2 [3:0] $end
  $var wire 4 2 o3 [3:0] $end
  $scope module sorter $end
   $var wire 4 + v0 [3:0] $end
   $var wire 4 , v1 [3:0] $end
   $var wire 4 - v2 [3:0] $end
   $var wire 4 . v3 [3:0] $end
   $var wire 4 / o0 [3:0] $end
   $var wire 4 0 o1 [3:0] $end
   $var wire 4 1 o2 [3:0] $end
   $var wire 4 2 o3 [3:0] $end
   $var wire 4 # c0_min [3:0] $end
   $var wire 4 $ c0_max [3:0] $end
   $var wire 4 % c1_min [3:0] $end
   $var wire 4 & c1_max [3:0] $end
   $var wire 4 ' c2_min [3:0] $end
   $var wire 4 ( c3_min [3:0] $end
   $var wire 4 ) c3_max [3:0] $end
   $var wire 4 * c4_min [3:0] $end
   $scope module c0 $end
    $var wire 4 + a [3:0] $end
    $var wire 4 , b [3:0] $end
    $var wire 4 $ max [3:0] $end
    $var wire 4 # min [3:0] $end
   $upscope $end
   $scope module c1 $end
    $var wire 4 $ a [3:0] $end
    $var wire 4 - b [3:0] $end
    $var wire 4 & max [3:0] $end
    $var wire 4 % min [3:0] $end
   $upscope $end
   $scope module c2 $end
    $var wire 4 & a [3:0] $end
    $var wire 4 . b [3:0] $end
    $var wire 4 2 max [3:0] $end
    $var wire 4 ' min [3:0] $end
   $upscope $end
   $scope module c3 $end
    $var wire 4 # a [3:0] $end
    $var wire 4 % b [3:0] $end
    $var wire 4 ) max [3:0] $end
    $var wire 4 ( min [3:0] $end
   $upscope $end
   $scope module c4 $end
    $var wire 4 ) a [3:0] $end
    $var wire 4 ' b [3:0] $end
    $var wire 4 1 max [3:0] $end
    $var wire 4 * min [3:0] $end
   $upscope $end
   $scope module c5 $end
    $var wire 4 ( a [3:0] $end
    $var wire 4 * b [3:0] $end
    $var wire 4 0 max [3:0] $end
    $var wire 4 / min [3:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000 #
b0111 $
b0110 %
b0111 &
b0111 '
b0000 (
b0110 )
b0110 *
b0111 +
b0000 ,
b0110 -
b1000 .
b0000 /
b0110 0
b0111 1
b1000 2
#10
b0011 #
b1010 $
b0100 %
b1010 &
b0001 '
b0011 (
b0100 )
b0001 *
b0011 +
b1010 ,
b0100 -
b0001 .
b0001 /
b0011 0
b0100 1
b1010 2
#20
b0101 #
b1100 $
b0101 %
b1100 &
b1000 '
b0101 (
b0101 )
b0101 *
b0101 +
b1100 ,
b0101 -
b1000 .
b0101 /
b0101 0
b1000 1
b1100 2
#30
b1100 #
b1110 $
b0110 %
b1110 &
b1110 '
b0110 (
b1100 )
b1100 *
b1110 +
b0110 -
b1110 .
b0110 /
b1100 0
b1110 1
b1110 2
#40
b1111 #
b1111 $
b1010 %
b1111 &
b0000 '
b1010 (
b1111 )
b0000 *
b1111 +
b1111 ,
b1010 -
b0000 .
b0000 /
b1010 0
b1111 1
b1111 2
#50
b1011 #
b1101 $
b0010 %
b1101 &
b0101 '
b0010 (
b1011 )
b0101 *
b1101 +
b1011 ,
b0010 -
b0101 .
b0010 /
b0101 0
b1011 1
b1101 2
#60
b0011 #
b0110 %
b0100 '
b0011 (
b0110 )
b0100 *
b0011 +
b1101 ,
b0110 -
b0100 .
b0011 /
b0100 0
b0110 1
#70
b0001 #
b0101 $
b0001 %
b0101 &
b0101 '
b0001 (
b0001 )
b0001 *
b0001 +
b0101 ,
b0001 -
b0101 .
b0001 /
b0001 0
b0101 1
b0101 2
#80
b0100 #
b1011 $
b1011 %
b1100 &
b0100 '
b0100 (
b1011 )
b0100 *
b1011 +
b0100 ,
b1100 -
b0100 .
b0100 /
b0100 0
b1011 1
b1100 2
#90
b0010 #
b1100 $
b1000 %
b1100 '
b0010 (
b1000 )
b1000 *
b0010 +
b1100 ,
b1000 -
b1111 .
b0010 /
b1000 0
b1100 1
b1111 2
#100
b0000 #
b0000 $
b0000 %
b0000 &
b0000 '
b0000 (
b0000 )
b0000 *
b0000 +
b0000 ,
b0000 -
b0000 .
b0000 /
b0000 0
b0000 1
b0000 2
#110
b1111 #
b1111 $
b1111 %
b1111 &
b1111 '
b1111 (
b1111 )
b1111 *
b1111 +
b1111 ,
b1111 -
b1111 .
b1111 /
b1111 0
b1111 1
b1111 2
#120
b0000 #
b0000 %
b0000 (
b0000 )
b0000 *
b0000 +
b0000 -
b0000 /
b0000 0
#130
b1111 %
b0000 '
b1111 )
b1111 +
b0000 ,
b1111 -
b0000 .
#140
b0001 $
b0001 %
b0010 &
b0010 '
b0001 )
b0001 *
b0000 +
b0001 ,
b0010 -
b0011 .
b0001 0
b0010 1
b0011 2
#150
b0010 #
b0011 $
b0011 &
b0000 '
b0001 (
b0010 )
b0000 *
b0011 +
b0010 ,
b0001 -
b0000 .
#160
b0101 #
b0101 $
b0101 %
b0101 &
b0101 '
b0101 (
b0101 )
b0101 *
b0101 +
b0101 ,
b0101 -
b0101 .
b0101 /
b0101 0
b0101 1
b0101 2
#170
b0001 #
b0001 $
b0001 %
b0010 &
b0010 '
b0001 (
b0001 )
b0001 *
b0001 +
b0001 ,
b0010 -
b0010 .
b0001 /
b0001 0
b0010 1
b0010 2
#180
b0111 #
b1000 $
b1000 %
b1001 &
b1001 '
b0111 (
b1000 )
b1000 *
b0111 +
b1000 ,
b1001 -
b1010 .
b0111 /
b1000 0
b1001 1
b1010 2
#190
b1101 #
b1110 $
b1100 %
b1110 &
b1011 '
b1100 (
b1101 )
b1011 *
b1110 +
b1101 ,
b1100 -
b1011 .
b1011 /
b1100 0
b1101 1
b1110 2
#210
#220
#230
#240
